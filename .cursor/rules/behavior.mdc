---
description: 
globs: 
alwaysApply: true
---
We following simple MVC architecture, this project is backend and will handle models and controller part (aka api or router)
When creating new API endpoints, first define the model in `models/`, then the handler in `api/handlers.go`, and finally register the route in `api/routes.go`.
For database interactions, place the logic within the `services/` directory.
Source code will be compiled in to bin/server.exe.
When adding a new dependency, remind me to run `go mod tidy`.
Suggest tests for new features.
When initialize the project, plans tasks in docs/todos.md, after complete tasks, mark the task as complete, summarize the changes then update new tasks if necessary.
Plan Description Requirements will be listed in docs/PRD.md.
After changing something that break the api update it to the docs/api.md. Other developer will see this file to use the program. Update docs/postman_collection too after changing api.
Complex architecture will be summarized in docs/engineer.md and draw diagram using mermaid for stuff such as ERD, System architecture, etc. Make it easier for me to catch up with the project and to understand the code better.
If use some external library, check for documentation by using context7 tools.
